import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'java'
}

ext {
    projectVersion = System.getenv("VERSION") ? System.getenv("VERSION") : "test"
}
version = ext.projectVersion + '-dev'
group = "ru.serega007.bcsc"
archivesBaseName = "BetterCSC-Plus"

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

repositories {
    mavenCentral()
}

dependencies {
    compileOnly fileTree(dir: 'libs', include: ['*.jar'])
    compileOnly fileTree(dir: 'libs/lwjgl', include: ['*.jar'])
    compileOnly fileTree(dir: 'libs/MCLibs', include: ['*.jar'])
}

jar {
	from('./') {
		include('README.md')
	}
}

tasks.register('processSource', Sync) {
    from sourceSets.main.java
    inputs.property 'version', projectVersion
    filter(ReplaceTokens, tokens: [version: projectVersion])
    into layout.buildDirectory.file('src').get()
}

compileJava {
    source = processSource.outputs
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    from(sourceSets.main.resources) {
        filter(ReplaceTokens, tokens: [version:  projectVersion])
    }
    into(layout.buildDirectory)
}

tasks.named("build") { finalizedBy("runObfuscator") }
tasks.register('runObfuscator', JavaExec) {
    classpath = files('obfuscator\\obfuscator-1.0.0.jar')
    workingDir = file('obfuscator')
//    jvmArgs = ['-Ddependencies=' + file('obfuscator\\libsobf\\') + ',' + file('libs\\') + ',' + file('libs\\lwjgl\\') + ',' + file('libs\\MCLibs\\')]
    args = [layout.buildDirectory.file("\\libs\\$archivesBaseName-$version" + ".jar").get(), layout.buildDirectory.file("\\libs\\$archivesBaseName-$projectVersion" + ".jar").get()]
}